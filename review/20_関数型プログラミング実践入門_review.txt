関数型プログラミング実践入門


------------------------------------------------------------------
良い所

Haskellとその他の命令型言語の具体的なコーディング比較により
Haskellの強力さをダイレクトに体感

doctest、quickCheck、hlintなどの有用なツールの紹介

ランレングス圧縮を例にした命令型的な思考からの脱却

巻末の有用書籍紹介
------------------------------------------------------------------


僕がこの書籍を読んだのはHaskell関連の書籍では2冊目、「すごいHaskell楽しく学ぼう」
を読了した後でした。
すごいH本で基礎的な内容を消化した後に読むにはとても良い書籍。

以下、個人的にためになった項目を抜粋

 * Haskellとその他の命令型言語の具体的なコーディング比較によりHaskellの強力さをダイレクトに体感

「第1章[比較で見えてくる]関数型プログラミング」では既存の命令型言語とHaskellによる
具体的な問題に対する解決法とアプローチの違いを紹介。
既存の言語(Java, C++, Ruby...)などでのコーディングとそれらが抱える言語的な課題に対しHaskellでは
こんな感じでエレガントに解決するよーといった感じで対比させることによりHaskellの強力さを生々しく体感する
ことができる。ざくっとHaskell及び関数型言語のメリットの概要を説明されるだけでは伝わらない、
実践力を目の当たりにできるのは、Haskellを使って何ができるのだろうと考える者にはとても参考になる。

「でHaskellでなにができるの？」と思われる命令型言語を修めし者達には非常に参考になるのではと思う。

 * ランレングス圧縮を例にした命令型的な思考からの脱却 

Haskellなど関数型言語を学び始め一通りシンタックスなども覚えたころに、いざコーディングをしてみても
「なんかこれじゃない・・」って感じに陥る。

