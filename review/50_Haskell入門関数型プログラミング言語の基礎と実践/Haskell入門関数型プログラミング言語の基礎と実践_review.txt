[タイトル]
    Haskell入門関数型プログラミング言語の基礎と実践

[原題]
    Haskell入門関数型プログラミング言語の基礎と実践


[ひとこと]
    入門書ではない
    しかし実践におけるベストプラクティスが豊富

[書評]


<入門書ではない>
まず入門と唱っているが入門書ではない.
Haskellの基礎文法についてはかなりさっぱり書かれている印象で、正直この書籍で
入門できるのか・・・

とは言え入門書としては疑問がありますが、反面、実践的なノウハウについてはとても豊富で
他の書籍にはないテクニックが盛りだくさん.
己のHaskell力を実践に昇華させる際にはとても参考になるのではと思います.

出版されたのも2017年と最近のため、最新の技術が学べるのも嬉しいところ.

テクニックの詳細についてはこの後詳述しますが、本書は一気に読むのではなく自分が興味のあるライブラリや
技術を掻い摘んで読んでいく感じがベターかなと思いました.
(盛りだくさん故に一気に読むと食傷気味になるかも?)


<stackでの環境構築>
すごいH本を始め、大抵はHaskell Platformで環境構築ですが、
最近の本と言うこともあり、環境構築にstackを使用しています.


<実践技術詳細>
本書で取り上げられている実践技術の一部を紹介.
この辺の知識をふんだんに取り上げているところが本書の魅力ではないでしょうか.
(他入門書ではまず取り上げられていないです)


* モナドトランスフォーマー
    本質に付随する様々な問題をエレガントに処理するのがモナドですが、1つの関数で扱えるモナドの種類は
    1つという原則があります.
    1つの関数で複数のモナドを扱いたい〜、という要望に応えるのがモナドトランスフォーマー

* ST sモナド
    Haskellには変数はありません.扱えるのは定数と関数です.
    そんなHaskellでミュータブルな値を扱うためのテクニックのひとつ

* パーサ
    Haskellパーサライブラリの定番attopersecの使い方を紹介.
    Haskellといえばパーサは強みの一つですが、なるほど。パーサという文脈も
    モナドに落としこむことによって、エレガントに扱えるわけですね.
    存在意義が素人のワタクシにはいまいちわからなかったアプリカティブも
    パーサと組み合わせるととてもエレガントになることを発見させられました.

* Lens
    あらゆるデータ構造に対して簡潔にアクセスするための枠組み.
    とは言え、馴染みのない者からすると何書いているのかわからん・・・
    value^._2._3._1てなんですか？？ポカーン
    習得コストは高そうですがこれも魅力あるのでちゃんと取り組みたいところ.


